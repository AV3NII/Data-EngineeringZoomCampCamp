services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always


docker build -t test:pandas 


docker run -it -e POSTGRES_USER="root" -e POSTGRES_PASSWORD="root" -e POSTGRES_DB="ny_taxi" -v C:\Users\veit\Development\AI-dev\FeatrueEngeneeringHackerthon\week_1_basics_n_setup\2_docker_sql -p 5432:5432 postgres:13

docker run -it -e POSTGRES_USER="root" -e POSTGRES_PASSWORD="root" -e POSTGRES_DB="ny_taxi" -v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data -p 5432:5432 postgres:13

pgcli -h 127.0.0.1 -p 5432 -u root -d ny_taxi




#Database Ui with PGAdmin

docker run -it -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" -e PGADMIN_DEFAULT_PASSWORD="root" -p 8080:80 dpage/pgadmin4


# Docker Network to let PGAdmin know about postgres
docker network create pg-network

docker run -it -e POSTGRES_USER="root" -e POSTGRES_PASSWORD="root" -e POSTGRES_DB="ny_taxi" -v C:\Users\veit\Development\AI-dev\FeatrueEngeneeringHackerthon\week_1_basics_n_setup\2_docker_sql -p 5432:5432 --network=pg-network --name pg-database postgres:13

docker run -it -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" -e PGADMIN_DEFAULT_PASSWORD="root" -p 8080:80 --network=pg-network --name pgadmin dpage/pgadmin4


# ingest data to postgres

url = 'https://github.com/DataTalksClub/nyc-tlc-data/releases/download/green/green_tripdata_2019-09.csv.gz'
url2 = 'https://s3.amazonaws.com/nyc-tlc/misc/taxi+_zone_lookup.csv'
python ingest_data.py --user=root --password=root  --host=127.0.0.1  --port=5432  --db=ny_taxi  --table_name=green_tripdata --url=https://github.com/DataTalksClub/nyc-tlc-data/releases/download/green/green_tripdata_2019-09.csv.gz



## Containerized Startup
# start db container
docker compose up

# new docker image to encapsulate pipeline
docker build -t ingest_data:v001 .

# create and execute conatiner for image: 

docker run -it --network=2_docker_sql_ny_taxi_network --name data-pipe ingest_data:v001

